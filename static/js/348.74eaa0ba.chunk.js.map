{"version":3,"file":"static/js/348.74eaa0ba.chunk.js","mappings":"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","sources":["components/notification-message/NotificationMessage.jsx","components/Contact-list/contact-list.jsx","components/Filter/filter.jsx","components/Form-input/form-input.jsx","pages/ContactsPage.jsx"],"sourcesContent":["const NotificationMessage = ({ message }) => {\n  return <p className=\"notif-message\">{message}</p>;\n};\nexport default NotificationMessage;\n","import { useDispatch, useSelector } from 'react-redux';\nimport './contact-list.css';\nimport NotificationMessage from 'components/notification-message/NotificationMessage';\nimport { deleteContactThunk, getContactsThunk } from 'store/thunk/thunk';\nimport { selectFilter, selectVisibleContacts } from 'store/Slice/selectors';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const deleteContact = id => {\n    dispatch(deleteContactThunk(id));\n  };\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const contactlist = visibleContacts.map(({ id, name, number }) => (\n    <li className=\"item\" key={id}>\n      <span>{name}</span>:<span> {number}</span>\n      <button type=\"button\" onClick={() => deleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  ));\n\n  return (\n    <div className=\"contacts\">\n      {visibleContacts.length === 0 ? (\n        <NotificationMessage message={`No contact ${filter}`} />\n      ) : (\n        <ul>{contactlist}</ul>\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport './filter.css';\nimport { selectFilter } from 'store/Slice/selectors';\nimport { filterContacts } from 'store/Slice/FilterSlice';\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const filterContact = ({ target: { value } }) => {\n    dispatch(filterContacts(value));\n  };\n\n  return (\n    <div className=\"form-group \">\n      <input\n        className=\"form-field\"\n        type=\"text\"\n        value={filter}\n        onChange={filterContact}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useState } from 'react';\n\nimport './form-input.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNewContactThunk } from 'store/thunk/thunk';\nimport { selectContacts } from 'store/Slice/selectors';\n\nconst FormInput = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    const { value, name } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isContact = contacts.find(el => el.number === number);\n    if (isContact) {\n      setName('');\n      setNumber('');\n      return alert('Контакт Існує');\n    }\n\n    const data = {\n      name: name,\n      number: number,\n    };\n    dispatch(addNewContactThunk(data));\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"input-container\">\n        <div className=\"input-name\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            className=\"input-form\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n          <span className=\"bar\"></span>\n          <label>Name</label>\n        </div>\n        <div className=\"input-number\">\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className=\"input-form\"\n            value={number}\n            onChange={handleChange}\n            required\n          />\n          <span className=\"bar\"></span>\n          <label>Number</label>\n        </div>\n        <button className=\"btn\" type=\"submit\">\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default FormInput;\n","import ContactList from \"components/Contact-list/contact-list\";\nimport Filter from \"components/Filter/filter\";\nimport FormInput from \"components/Form-input/form-input\";\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <FormInput />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["_ref","message","_jsx","className","children","visibleContacts","useSelector","selectVisibleContacts","filter","selectFilter","dispatch","useDispatch","useEffect","getContactsThunk","contactlist","map","id","name","number","_jsxs","type","onClick","deleteContactThunk","deleteContact","length","NotificationMessage","concat","value","onChange","target","filterContacts","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","contacts","selectContacts","handleChange","e","_e$target","onSubmit","preventDefault","find","el","alert","data","addNewContactThunk","required","_Fragment","FormInput","Filter","ContactList"],"sourceRoot":""}