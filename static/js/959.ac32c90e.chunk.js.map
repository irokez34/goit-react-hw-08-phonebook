{"version":3,"file":"static/js/959.ac32c90e.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Contact-list/contact-list.module.css?c832","components/notification-message/NotificationMessage.jsx","components/Contact-list/contact-list.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/filter.module.css?e01c","components/Filter/filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Form-input/form-input.module.css?cf29","components/Form-input/form-input.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"contact-list_contacts__ZaTi7\",\"item\":\"contact-list_item__im152\"};","const NotificationMessage = ({ message }) => {\n  return <p className=\"notif-message\">{message}</p>;\n};\nexport default NotificationMessage;\n","import { useDispatch, useSelector } from 'react-redux';\nimport css from './contact-list.module.css';\nimport NotificationMessage from 'components/notification-message/NotificationMessage';\nimport { deleteContactThunk, getContactsThunk } from 'store/thunk/thunk';\nimport { selectFilter, selectVisibleContacts } from 'store/Slice/selectors';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const deleteContact = id => {\n    dispatch(deleteContactThunk(id));\n  };\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const contactlist = visibleContacts.map(({ id, name, number }) => (\n    <li className={css.item} key={id}>\n      <span>\n        {name}: {number}\n      </span>\n      <button\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n        className={css.button}\n      >\n        Delete\n      </button>\n    </li>\n  ));\n\n  return (\n    <div className={css.contacts}>\n      {visibleContacts.length === 0 ? (\n        <NotificationMessage message={`No contact ${filter}`} />\n      ) : (\n        <ul>{contactlist}</ul>\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form_filter\":\"filter_form_filter__IEgdO\",\"form_input\":\"filter_form_input__uhFZ1\",\"label\":\"filter_label__nHxuJ\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './filter.module.css'\nimport { selectFilter } from 'store/Slice/selectors';\nimport { filterContacts } from 'store/Slice/FilterSlice';\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const filterContact = ({ target: { value } }) => {\n    dispatch(filterContacts(value));\n  };\n\n  return (\n    <div className={css.form_filter}>\n      <input\n        className={css.form_input}\n        type=\"text\"\n        value={filter}\n        onChange={filterContact}\n      />\n      <label className={css.label}>Search Your Contact</label>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form-input_form__Se4eX\",\"input_container\":\"form-input_input_container__CveAv\",\"input_name\":\"form-input_input_name__p0m56\",\"input_number\":\"form-input_input_number__0MNA8\",\"input_form\":\"form-input_input_form__jvBDM\",\"label\":\"form-input_label__cbdkQ\",\"bar\":\"form-input_bar__lyjyu\",\"button\":\"form-input_button__sZxpg\"};","import React, { useState } from 'react';\n\nimport css from './form-input.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNewContactThunk } from 'store/thunk/thunk';\nimport { selectContacts } from 'store/Slice/selectors';\n\nconst FormInput = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    const { value, name } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isContact = contacts.find(el => el.number === number);\n    if (isContact) {\n      setName('');\n      setNumber('');\n      return alert('Контакт Існує');\n    }\n\n    const data = {\n      name: name,\n      number: number,\n    };\n    dispatch(addNewContactThunk(data));\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <div className={css.input_container}>\n        <div className={css.input_name}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={css.input_form}\n            value={name}\n            onChange={handleChange}\n            required\n          />\n          <label className={css.label}>Name</label>\n        </div>\n        <div className={css.input_number}>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={css.input_form}\n            value={number}\n            onChange={handleChange}\n            required\n          />\n          <label className={css.label}>Number</label>\n        </div>\n        <button className={css.button} type=\"submit\">\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default FormInput;\n","import ContactList from \"components/Contact-list/contact-list\";\nimport Filter from \"components/Filter/filter\";\nimport FormInput from \"components/Form-input/form-input\";\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <FormInput />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["_ref","message","_jsx","className","children","visibleContacts","useSelector","selectVisibleContacts","filter","selectFilter","dispatch","useDispatch","useEffect","getContactsThunk","contactlist","map","id","name","number","_jsxs","css","type","onClick","deleteContactThunk","deleteContact","length","NotificationMessage","concat","value","onChange","target","filterContacts","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","contacts","selectContacts","handleChange","e","_e$target","onSubmit","preventDefault","find","el","alert","data","addNewContactThunk","required","_Fragment","FormInput","Filter","ContactList"],"sourceRoot":""}